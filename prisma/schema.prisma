generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Wine {
  name       String
  type       String
  elaborate  String?
  grapes     String
  harmonize  String
  abv        Float
  body       String
  acidity    String
  code       String
  price      Int         @default(0)
  regionId   Int
  clerkId    String?
  createdAt  DateTime    @default(now())
  featured   Boolean     @default(false)
  image      String?
  updatedAt  DateTime    @updatedAt
  id         Int         @id @default(autoincrement())
  cartItems  CartItem[]
  favorites  Favorite[]
  images     Image[]
  orderItems OrderItem[]
  reviews    Review[]
  region     Region      @relation("RegionToWine", fields: [regionId], references: [id])
}

model Region {
  id      Int    @id @default(autoincrement())
  name    String
  country String
  wines   Wine[] @relation("RegionToWine")
}

model Image {
  id     Int    @id @default(autoincrement())
  url    String
  wineId Int
  wine   Wine   @relation(fields: [wineId], references: [id], onDelete: Cascade)
}

model Favorite {
  id        String   @id @default(uuid())
  clerkId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  wineId    Int
  wine      Wine     @relation(fields: [wineId], references: [id], onDelete: Cascade)
}

model Review {
  id             String   @id @default(uuid())
  clerkId        String
  rating         Int
  comment        String
  authorName     String
  authorImageUrl String
  vintage        String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  wineId         Int
  wine           Wine     @relation(fields: [wineId], references: [id], onDelete: Cascade)
}

model Cart {
  id             String     @id @default(uuid())
  clerkId        String
  numItemsInCart Int        @default(0)
  cartTotal      Int        @default(0)
  shipping       Int        @default(5)
  tax            Int        @default(0)
  taxRate        Float      @default(0.1)
  orderTotal     Int        @default(0)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  cartItems      CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  cartId    String
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  wineId    Int
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  wine      Wine     @relation(fields: [wineId], references: [id], onDelete: Cascade)
}

model Order {
  id         String      @id @default(uuid())
  clerkId    String
  products   Int         @default(0)
  orderTotal Int         @default(0)
  tax        Int         @default(0)
  shipping   Int         @default(0)
  email      String
  isPaid     Boolean     @default(false)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderItems OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  wineId    Int
  amount    Int
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  wine      Wine     @relation(fields: [wineId], references: [id])
}
